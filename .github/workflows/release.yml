name: 🚀 Release Workflow

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

env:
  NODE_VERSION: '18.x'

jobs:
  # Job para criar release
  create-release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      release-id: ${{ steps.create-release.outputs.id }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🏷️ Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: 📋 Generate changelog
      id: changelog
      run: |
        echo "Generating changelog for ${{ steps.version.outputs.version }}..."
        
        # Get commits since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -n "$LAST_TAG" ]; then
          COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s" --no-merges)
        else
          COMMITS=$(git log --pretty=format:"- %s" --no-merges -10)
        fi
        
        cat > CHANGELOG.md << EOF
        ## 🌱 EcoColeta ${{ steps.version.outputs.version }}
        
        ### 📅 Release Date: $(date '+%Y-%m-%d')
        
        ### ✨ What's New
        
        $COMMITS
        
        ### 🔧 Technical Details
        - Node.js version: ${{ env.NODE_VERSION }}
        - Build date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
        - Commit: ${GITHUB_SHA:0:7}
        
        ### 🌍 Environmental Impact
        Esta versão do EcoColeta continua nossa missão de promover a sustentabilidade através da tecnologia, facilitando a coleta seletiva e o descarte responsável de resíduos.
        
        ---
        **Full Changelog**: https://github.com/${{ github.repository }}/compare/$LAST_TAG...${{ steps.version.outputs.version }}
        EOF
        
    - name: 🚀 Create GitHub Release
      id: create-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: 🌱 EcoColeta ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}

  # Job para build de produção
  build-release:
    name: 🏗️ Build Release
    runs-on: ubuntu-latest
    needs: create-release
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'EcoColetaPrograma/ecoColeta-Presentation/package.json'
        
    - name: 📦 Install dependencies
      working-directory: ./EcoColetaPrograma/ecoColeta-Presentation
      run: npm ci --production
      
    - name: 🏗️ Build production release
      working-directory: ./EcoColetaPrograma/ecoColeta-Presentation
      run: |
        echo "Building EcoColeta ${{ needs.create-release.outputs.version }} for production..."
        
        # Create production build
        mkdir -p ../release
        
        # Copy essential files
        cp -r public ../release/
        cp -r src ../release/
        cp package.json ../release/
        cp server.js ../release/
        cp db.json ../release/
        
        # Create version info file
        cat > ../release/version.json << EOF
        {
          "version": "${{ needs.create-release.outputs.version }}",
          "buildDate": "$(date -u '+%Y-%m-%d %H:%M:%S UTC')",
          "commit": "${GITHUB_SHA:0:7}",
          "nodeVersion": "${{ env.NODE_VERSION }}"
        }
        EOF
        
        # Create installation script
        cat > ../release/install.sh << 'EOF'
        #!/bin/bash
        echo "🌱 Installing EcoColeta..."
        npm install --production
        echo "✅ EcoColeta installed successfully!"
        echo "🚀 Start with: npm start"
        EOF
        chmod +x ../release/install.sh
        
        # Create Windows batch file
        cat > ../release/install.bat << 'EOF'
        @echo off
        echo 🌱 Installing EcoColeta...
        npm install --production
        echo ✅ EcoColeta installed successfully!
        echo 🚀 Start with: npm start
        pause
        EOF
        
        echo "Build completed successfully!"
        
    - name: 📦 Create release archive
      run: |
        cd EcoColetaPrograma
        tar -czf ecocoleta-${{ needs.create-release.outputs.version }}.tar.gz release/
        zip -r ecocoleta-${{ needs.create-release.outputs.version }}.zip release/
        
    - name: 📁 Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./EcoColetaPrograma/ecocoleta-${{ needs.create-release.outputs.version }}.tar.gz
        asset_name: ecocoleta-${{ needs.create-release.outputs.version }}.tar.gz
        asset_content_type: application/gzip
        
    - name: 📁 Upload release assets (ZIP)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: ./EcoColetaPrograma/ecocoleta-${{ needs.create-release.outputs.version }}.zip
        asset_name: ecocoleta-${{ needs.create-release.outputs.version }}.zip
        asset_content_type: application/zip

  # Job para deploy de produção
  deploy-production:
    name: 🌐 Deploy to Production
    runs-on: ubuntu-latest
    needs: [create-release, build-release]
    environment: production
    
    steps:
    - name: 🚀 Production deployment
      run: |
        echo "🌱 Deploying EcoColeta ${{ needs.create-release.outputs.version }} to production..."
        echo "🔗 Production URL: https://ecocoleta.com"
        echo "📊 Version: ${{ needs.create-release.outputs.version }}"
        echo "✅ Deployment completed successfully!"
        
        # Aqui você adicionaria os steps específicos do seu provedor de hosting
        
  # Job para notificações
  notify-release:
    name: 📢 Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, deploy-production]
    if: always()
    
    steps:
    - name: 📢 Success notification
      if: needs.deploy-production.result == 'success'
      run: |
        echo "🎉 EcoColeta ${{ needs.create-release.outputs.version }} released successfully!"
        echo "🌱 New features are now available to help protect our environment!"
        echo "📦 Download: https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-release.outputs.version }}"
        
    - name: ❌ Failure notification
      if: needs.deploy-production.result != 'success'
      run: |
        echo "❌ EcoColeta ${{ needs.create-release.outputs.version }} release failed!"
        echo "🔧 Please check the deployment logs and retry."
